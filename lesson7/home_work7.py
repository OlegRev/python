#!/usr/bin/python3

"""
== Лото ==
Правила игры в лото.
Игра ведется с помощью специальных карточек, на которых отмечены числа, 
и фишек (бочонков) с цифрами.
Количество бочонков — 90 штук (с цифрами от 1 до 90).
Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр, 
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:
--------------------------
    9 43 62          74 90
 2    27    75 78    82
   41 56 63     76      86 
--------------------------
В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается 
случайная карточка. 
Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.
Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.
	
Побеждает тот, кто первый закроет все числа на своей карточке.
Пример одного хода:
Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71   
--------------------------
-- Карточка компьютера ---
 7 11     - 14    87      
      16 49    55 77    88    
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)
Подсказка: каждый следующий случайный бочонок из мешка удобно получать 
с помощью функции-генератора.
Подсказка: для работы с псевдослучайными числами удобно использовать 
модуль random: http://docs.python.org/3/library/random.html
"""
#!game LOTO

# создание карточки через матрицу 3x9
import random


##########################
class LotoCard:
#Заполнить матрицу значениями None, затем заполнить пять элементов в казждой строке 0 и 4 значения в каждой строке оставить как None
    def __init__(self, name):
        self.name = name
        self.number_value = 15
        self.matrix = []
        for row in range(0, 3):
            self.matrix.append([None for column in range(0, 9)])



# класс мешочек с боченками через итератор

class BagWithKegs:

    def __init__(self):
        self.bag_with_kegs = list(range(1,91))

    def left_kegs(self):                                            #осталость бочонков
        return len(self.bag_with_kegs)

    def __iter__(self):
        return self

    def __next__(self):                                             #
                                                                    #
        if len(self.bag_with_kegs):                                 #удаление выпавшего номера из мешочка
            return self.bag_with_kegs.pop\
                (random.randint(0, len(self.bag_with_kegs)-1))
        raise StopIteration


################
Bag_kegs = BagWithKegs()                                               #создание мешочка с бочонками

player_card = LotoCard('Ваша карточка')
for new_kegs in Bag_kegs:
    print('\nНовый бочонок: {} (Бочонков осталось {})'.format(new_kegs, Bag_kegs.left_kegs()))


